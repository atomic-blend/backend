// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: mail/v1/mail.proto

package mailv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MailAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // Unique identifier for the attachment
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // MIME type of the attachment
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`                          // Name of the file
	Content       []byte                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                            // Content of the file
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MailAttachment) Reset() {
	*x = MailAttachment{}
	mi := &file_mail_v1_mail_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MailAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailAttachment) ProtoMessage() {}

func (x *MailAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_mail_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailAttachment.ProtoReflect.Descriptor instead.
func (*MailAttachment) Descriptor() ([]byte, []int) {
	return file_mail_v1_mail_proto_rawDescGZIP(), []int{0}
}

func (x *MailAttachment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MailAttachment) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *MailAttachment) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *MailAttachment) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// Mail is the message that represents a mail entity.
type Mail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                     // Unique identifier for the mail
	Headers       map[string]string      `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Headers of the mail
	TextContent   string                 `protobuf:"bytes,3,opt,name=text_content,json=textContent,proto3" json:"text_content,omitempty"`                                                // Text content of the mail
	HtmlContent   string                 `protobuf:"bytes,4,opt,name=html_content,json=htmlContent,proto3" json:"html_content,omitempty"`                                                // HTML content of the mail
	Attachments   []*MailAttachment      `protobuf:"bytes,5,rep,name=attachments,proto3" json:"attachments,omitempty"`                                                                   // Attachments of the mail
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mail) Reset() {
	*x = Mail{}
	mi := &file_mail_v1_mail_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mail) ProtoMessage() {}

func (x *Mail) ProtoReflect() protoreflect.Message {
	mi := &file_mail_v1_mail_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mail.ProtoReflect.Descriptor instead.
func (*Mail) Descriptor() ([]byte, []int) {
	return file_mail_v1_mail_proto_rawDescGZIP(), []int{1}
}

func (x *Mail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Mail) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Mail) GetTextContent() string {
	if x != nil {
		return x.TextContent
	}
	return ""
}

func (x *Mail) GetHtmlContent() string {
	if x != nil {
		return x.HtmlContent
	}
	return ""
}

func (x *Mail) GetAttachments() []*MailAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

var File_mail_v1_mail_proto protoreflect.FileDescriptor

const file_mail_v1_mail_proto_rawDesc = "" +
	"\n" +
	"\x12mail/v1/mail.proto\x12\amail.v1\"y\n" +
	"\x0eMailAttachment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\x12\x18\n" +
	"\acontent\x18\x04 \x01(\fR\acontent\"\x89\x02\n" +
	"\x04Mail\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x124\n" +
	"\aheaders\x18\x02 \x03(\v2\x1a.mail.v1.Mail.HeadersEntryR\aheaders\x12!\n" +
	"\ftext_content\x18\x03 \x01(\tR\vtextContent\x12!\n" +
	"\fhtml_content\x18\x04 \x01(\tR\vhtmlContent\x129\n" +
	"\vattachments\x18\x05 \x03(\v2\x17.mail.v1.MailAttachmentR\vattachments\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x8e\x01\n" +
	"\vcom.mail.v1B\tMailProtoP\x01Z7github.com/atomic-blend/backend/grpc/gen/mail/v1;mailv1\xa2\x02\x03MXX\xaa\x02\aMail.V1\xca\x02\aMail\\V1\xe2\x02\x13Mail\\V1\\GPBMetadata\xea\x02\bMail::V1b\x06proto3"

var (
	file_mail_v1_mail_proto_rawDescOnce sync.Once
	file_mail_v1_mail_proto_rawDescData []byte
)

func file_mail_v1_mail_proto_rawDescGZIP() []byte {
	file_mail_v1_mail_proto_rawDescOnce.Do(func() {
		file_mail_v1_mail_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mail_v1_mail_proto_rawDesc), len(file_mail_v1_mail_proto_rawDesc)))
	})
	return file_mail_v1_mail_proto_rawDescData
}

var file_mail_v1_mail_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_mail_v1_mail_proto_goTypes = []any{
	(*MailAttachment)(nil), // 0: mail.v1.MailAttachment
	(*Mail)(nil),           // 1: mail.v1.Mail
	nil,                    // 2: mail.v1.Mail.HeadersEntry
}
var file_mail_v1_mail_proto_depIdxs = []int32{
	2, // 0: mail.v1.Mail.headers:type_name -> mail.v1.Mail.HeadersEntry
	0, // 1: mail.v1.Mail.attachments:type_name -> mail.v1.MailAttachment
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_mail_v1_mail_proto_init() }
func file_mail_v1_mail_proto_init() {
	if File_mail_v1_mail_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mail_v1_mail_proto_rawDesc), len(file_mail_v1_mail_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mail_v1_mail_proto_goTypes,
		DependencyIndexes: file_mail_v1_mail_proto_depIdxs,
		MessageInfos:      file_mail_v1_mail_proto_msgTypes,
	}.Build()
	File_mail_v1_mail_proto = out.File
	file_mail_v1_mail_proto_goTypes = nil
	file_mail_v1_mail_proto_depIdxs = nil
}
