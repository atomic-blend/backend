version: "3.8"
services:
  reverse-proxy:
    image: nginx:alpine
    container_name: reverse-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth
      - productivity
    restart: unless-stopped

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile.dev  # Use a dev-specific Dockerfile
    container_name: auth
    expose:
      - "8080"
      - "50051"  # gRPC port
    volumes:
      - ./auth:/app
      - type: bind
        source: ${HOME}${USERPROFILE}/.netrc
        target: /root/.netrc
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - .env
    command: air  # Hot-reloading for development

  mail-server:
    build:
      context: ./mail-server
      dockerfile: Dockerfile.dev  # Use a dev-specific Dockerfile
    container_name: mail-server
    ports:
      - target: 1025
        published: 1025
        protocol: tcp
        mode: host
    env_file:
      - .env
    command: air
    volumes:
      - ./mail-server:/app
      - type: bind
        source: ${HOME}${USERPROFILE}/.netrc
        target: /root/.netrc
  
  mail:
    build:
      context: ./mail
      dockerfile: Dockerfile.dev  # Use a dev-specific Dockerfile
    container_name: mail
    expose:
      - "8080"
      - "50051"  # gRPC port
    volumes:
      - ./mail:/app
      - type: bind
        source: ${HOME}${USERPROFILE}/.netrc
        target: /root/.netrc
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - .env
    command: air  # Hot-reloading for development
  
  productivity:
    build:
      context: ./productivity
      dockerfile: Dockerfile.dev  # Use a dev-specific Dockerfile
    container_name: productivity
    expose:
      - "8080"
      - "50051"  # gRPC port
    volumes:
      - ./productivity:/app
      - type: bind
        source: ${HOME}${USERPROFILE}/.netrc
        target: /root/.netrc
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - .env
    command: air  # Hot-reloading for development

  mongodb:
    image: mongo:8.0.4
    container_name: mongodb-atomic-blend
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: cloudlinker
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://mongo_user:password@localhost:27017 --quiet
      interval: 10s
      retries: 5
      
volumes:
  rabbitmq_data:
  mongo_data:
