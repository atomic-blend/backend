version: "3.8"

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev  # Use a dev-specific Dockerfile
    container_name: api-atomic-blend
    ports:
      - "8080:8080"
    volumes:
      - ./api:/app
      - /etc/localtime:/etc/localtime:ro
      - type: bind
        source: ${HOME}${USERPROFILE}/.netrc
        target: /root/.netrc
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - ./api/.env
    command: air  # Hot-reloading for development

  # rabbitmq:
  #   image: rabbitmq:4.0.5-management
  #   container_name: rabbitmq_server
  #   restart: always
  #   ports:
  #     - "5672:5672"   # AMQP protocol
  #     - "15672:15672" # Management UI
  #   environment:
  #     RABBITMQ_DEFAULT_USER: user
  #     RABBITMQ_DEFAULT_PASS: password
  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq
  #   healthcheck:
  #     test: ["CMD", "rabbitmq-diagnostics", "check_running"]
  #     interval: 10s
  #     retries: 5

  mongodb:
    image: mongo:8.0.4
    container_name: mongodb-atomic-blend
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: cloudlinker
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://mongo_user:password@localhost:27017 --quiet
      interval: 10s
      retries: 5

  mongo-express:
    image: mongo-express
    container_name: mongo-express-atomic-blend
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo_user
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://mongo_user:password@mongodb:27017/

volumes:
  rabbitmq_data:
  mongo_data:
