version: "3.8"
services:
  reverse-proxy:
    image: nginx:alpine
    container_name: reverse-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - auth
      - productivity
    restart: unless-stopped

  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile.dev  # Use a dev-specific Dockerfile
    container_name: auth
    expose:
      - "8080"
      - "50051"  # gRPC port
    volumes:
      - ./auth:/app
      - type: bind
        source: ${HOME}${USERPROFILE}/.netrc
        target: /root/.netrc
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - .env
    command: air  # Hot-reloading for development

  mail-server:
    build:
      context: ./mail-server
      dockerfile: Dockerfile.dev  # Use a dev-specific Dockerfile
    container_name: mail-server
    ports:
      - target: 1025
        published: 1025
        protocol: tcp
        mode: host
    env_file:
      - .env
    command: air
    volumes:
      - ./mail-server:/app
      - type: bind
        source: ${HOME}${USERPROFILE}/.netrc
        target: /root/.netrc
  
  mail:
    build:
      context: ./mail
      dockerfile: Dockerfile.dev  # Use a dev-specific Dockerfile
    container_name: mail
    expose:
      - "8080"
      - "50051"  # gRPC port
    volumes:
      - ./mail:/app
      - type: bind
        source: ${HOME}${USERPROFILE}/.netrc
        target: /root/.netrc
    networks:
      - default
      - rspamd
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - .env
    command: air  # Hot-reloading for development
  
  productivity:
    build:
      context: ./productivity
      dockerfile: Dockerfile.dev  # Use a dev-specific Dockerfile
    container_name: productivity
    expose:
      - "8080"
      - "50051"  # gRPC port
    volumes:
      - ./productivity:/app
      - type: bind
        source: ${HOME}${USERPROFILE}/.netrc
        target: /root/.netrc
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - .env
    command: air  # Hot-reloading for development

  mongodb:
    image: mongo:8.0.4
    container_name: mongodb-atomic-blend
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo_user
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: cloudlinker
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://mongo_user:password@localhost:27017 --quiet
      interval: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:4.1.2-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  rspamd:
    build:
      context: "./rspamd-config"
      dockerfile: "Dockerfile.rspamd"
    container_name: rspamd-compose-rspamd
    depends_on:
      - unbound
      - redis
    environment:
      - RSPAMD_DNS_SERVERS=round-robin:192.0.2.254:53
      - RSPAMD_REDIS_SERVERS=rspamd-compose-redis
      - RSPAMD_USE_BAYES=1
#      - RSPAMD_USE_GREYLIST=1
    networks:
      - rspamd
    ports:
      - "11332:11332"
      - "11333:11333"
      - "11334:11334"
    pull_policy: build
# recommended for production
#    read_only: true
    volumes:
      - rspamd-compose-rspamd-dbdir:/var/lib/rspamd

  redis:
    container_name: rspamd-compose-redis
    command: "redis-server --save 60 1 --loglevel warning"
    image: "redis:latest"
    expose:
      - "6379"
    sysctls:
      - net.core.somaxconn=4096
    networks:
      - rspamd
    volumes:
      - rspamd-compose-redis-data:/data

  unbound:
    build:
      context: "./rspamd-config"
      dockerfile: "Dockerfile.unbound"
    container_name: rspamd-compose-unbound
    networks:
      rspamd:
        ipv4_address: 192.0.2.254
    pull_policy: build


networks:
  rspamd:
    ipam:
      config:
        - subnet: 192.0.2.0/24
      
volumes:
  rabbitmq_data:
  mongo_data:
  rspamd-compose-redis-data:
  rspamd-compose-rspamd-dbdir:
