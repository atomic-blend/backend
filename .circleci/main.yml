version: 2.1

orbs:
  go: circleci/go@1.7

jobs:
  test-coverage:
    # docker:
    #   - image: cimg/go:1.23
    machine:
      image: ubuntu-2204:current
    resource_class: medium
    working_directory: ~/project

    steps:
      - checkout:
          path: ~/project

      - go/load-cache

      - go/mod-download

      - go/save-cache

      - run:
          name: Run linting
          command: |
            go install golang.org/x/lint/golint@latest
            golint -set_exit_status ./...

      - run:
          name: Run tests with coverage
          command: |
            go test -coverprofile=coverage.out -v ./...
            go tool cover -html=coverage.out -o coverage.html

      - store_artifacts:
          path: coverage.html
          destination: coverage-report

  bump-version:
    machine:
      image: ubuntu-2204:current
    resource_class: medium
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project

      - run:
          name: Configure git
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "pro@brandonguigo.com"
            git config user.name "CircleCI"

      - run:
          name: Download rustup
          command: |
            wget https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init
            chmod +x rustup-init
      - run:
          name: Install Rust
          command: |
            ./rustup-init -y --no-modify-path --default-toolchain nightly
            rm rustup-init
            echo 'export PATH=$HOME/.cargo/bin:$PATH' >> $BASH_ENV
      - run:
          name: Install Cocogitto
          command: cargo install cocogitto
          environment:
            RUSTFLAGS: --cfg procmacro2_semver_exempt

      - run:
          name: Check conventional commits validity
          command: |
            cog check
      - run:
          name: Bump version
          command: |
            cog bump --auto
      - run:
          name: Commit and push changes
          command: |
            git add CHANGELOG.md
            git commit -m "chore(release): $(git describe --abbrev=0 --tags)"
            git push -q https://${GITHUB_PAT}@github.com/${GITHUB_ORG_NAME}/${GITHUB_REPO_NAME}.git main
  
  build-docker-images:
    machine:
      image: ubuntu-2204:current
    resource_class: medium
    working_directory: ~/project
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Build Docker image
          command: |
            TAG=$(git describe --abbrev=0 --tags)
            echo "Building Docker image with tag $TAG"
            docker build -t ghcr.io/$GITHUB_ORG_NAME/$GITHUB_REPO_NAME:$TAG .
            echo "Docker image built successfully"
      - run:
          name: Push application Docker image
          command: |
            TAG=$(git describe --abbrev=0 --tags)
            echo "Pushing Docker image with tag $TAG"
            echo $GITHUB_PAT | docker login -u ghcr.io --password-stdin
            docker push ghcr.io/$GITHUB_ORG_NAME/$GITHUB_REPO_NAME:$TAG
            echo "Docker image pushed successfully"

workflows:
  version: 2
  main:
    jobs:
      - test-coverage
      - bump-version:
          requires:
            - test-coverage
      - build-docker-images:
          requires:
            - bump-version
